// Copyright (c) ppy Pty Ltd <contact@ppy.sh>. Licensed under the GNU Affero General Public License v3.0.
// See the LICENCE file in the repository root for full licence text.

.beatmapset-panel {
  --progress: 0;
  @_menu-width: 10px;
  @_menu-width-hover: 30px;
  @_border-radius: 10px; // also affects the hardcoded `clip-path` values.
  @_hover-transition-duration: 150ms;
  .own-layer();
  height: 100px;
  position: relative;
  background-color: hsl(var(--hsl-b3));
  border-radius: @_border-radius;
  font-size: @font-size--normal;
  --menu-width: @_menu-width;
  --info-bg: linear-gradient(0.25turn, hsl(var(--hsl-b2)), hsla(var(--hsl-b2), 0.8));
  --info-bg-opacity: 1;
  --info-bg-hover-opacity: 0;
  --info-bg-hover: linear-gradient(0.25turn, hsl(var(--hsl-b1)), hsla(var(--hsl-b1), 0.8));
  --play-bg: transparent;
  --play-icon: @fa-var-play;
  --play-icon-opacity: 0;
  --stats-opacity: 0;
  --menu-opacity: 0;


  &:hover {
    --menu-width: @_menu-width-hover;
    --play-bg: hsla(var(--hsl-b6), 0.8);
    --play-icon-opacity: 1;
    --info-bg: linear-gradient(0.25turn, hsl(var(--hsl-b4)), hsla(var(--hsl-b4), 0.8));
    --info-bg-opacity: 0;
    --info-bg-hover-opacity: 1;
    --stats-opacity: 1;
    --menu-opacity: 1;
  }

  &[data-audio-state="loading"],
  &[data-audio-state="playing"] {
    --play-bg: hsla(var(--hsl-b6), 0.8);
    --play-icon-opacity: 1;
    --play-icon: @fa-var-pause;
  }

  &__beatmap {
    margin: 1px 0.5px;
    width: 4px;
    height: 8px;
    border-radius: 10000px;
    background-color: var(--bg);
  }

  &__beatmap-icon {
    margin: 1px 1.5px 1px 1px;
    font-size: 12px; // icon size
  }

  &__beatmaps {
    margin: 4px;
    display: flex;
    align-items: center;
  }

  &__beatmaps-all {
    margin: -4px;
    display: flex;
  }

  &__content {
    pointer-events: none;
    position: relative;
    display: flex;
    height: 100%;
    width: 100%;
  }

  &__cover {
    .full-size();
    width: calc(100% - @_menu-width);
    border-radius: @_border-radius 0 0 @_border-radius;
    object-fit: cover;

    &--default {
      .at2x('~@images/layout/beatmaps/default-bg.png');
      background-position: center;
      background-size: cover;
    }
  }

  &__cover-container {
    .full-size();
    border-radius: @_border-radius;
  }

  &__extra-icon {
    .circle(20px);
    .center-content();
    font-size: 10px;
    background: hsla(var(--hsl-b6), 0.5);
    margin: 1px;
    padding-top: 1px; // adjust alignment
    pointer-events: auto;
  }

  &__extra-icons {
    position: absolute;
    top: 4px;
    left: 4px;
    display: flex;
  }

  &__info {
    flex: 1;
    min-width: 10px;
    // Adjust radius to prevent bleeding of the underneath cover
    // when hover background (of &__play) is active.
    border-radius: (@_border-radius - 1px) 0 0 (@_border-radius - 1px);
    padding: 4px @_border-radius;
    position: relative;
    background: var(--info-bg);
    display: flex;
    flex-direction: column;
  }

  &__info-row {
    padding: 0;
    margin: 0;
    display: flex;
    align-items: baseline;
    position: relative;
    z-index: 1;

    &--artist {
      .default-text-shadow();
      font-size: @font-size--title-small;
      font-weight: 600;
    }

    &--mapper {
      color: hsl(var(--hsl-c2));
      margin-top: 1px; // manual adjustment
      font-weight: 600;
      margin-bottom: auto;
    }

    &--stats {
      margin: -1px -5px;
      opacity: var(--stats-opacity);
    }

    &--title {
      .default-text-shadow();
      font-size: @font-size--title-small-4;
      font-weight: 600;
    }
  }

  &__main-link {
    .link-plain();
    .link-white();
    pointer-events: auto;
  }

  &__menu {
    .full-size();
    opacity: var(--menu-opacity);
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    font-size: 12px; // icon size
    color: hsl(var(--hsl-c2));
    .fade-element(@_hover-transition-duration);
    pointer-events: auto;
  }

  &__menu-container {
    width: var(--menu-width);
    flex: none;
    background-color: hsl(var(--hsl-b3));
    position: relative;
    border-radius: 0 @_border-radius @_border-radius 0;
    .fade-element(@_hover-transition-duration);

    &::after, &::before {
      content: '';
      width: @_border-radius;
      height: $width;
      position: absolute;
      background-color: inherit;
      right: 100%;
    }

    &::before {
      top: 0;
      // Extend to the top and right by 1px to prevent gap on some zoom levels.
      // Sizing is based on @_border-radius.
      clip-path: path('M11 -1 L11 10 L10 10 A10 10 0 0 0 0 0 L0 -1 Z');
    }

    &::after {
      bottom: 0;
      // Extend to the bottom and right by 1px to prevent gap on some zoom levels.
      // Sizing is based on @_border-radius.
      clip-path: path('M11 11 L11 0 L10 0 A10 10 0 0 1 0 10 L 0 11 Z');
    }
  }

  &__menu-item {
    .reset-input();
    color: hsl(var(--hsl-l1));
    width: 20px;
    margin: 2px 0;
    text-align: center;
    padding: 3px 0;

    .link-hover({
      color: hsl(var(--hsl-c1));
    });
  }

  &__play {
    .reset-input();
    .center-content();
    .fas();
    .fade-element(@_hover-transition-duration);
    font-size: 14px; // icon size
    padding: 15px;
    pointer-events: auto;
    opacity: var(--play-icon-opacity);

    &:hover {
      color: hsl(var(--hsl-orange-1));
    }

    &::before {
      display: block;
      content: var(--play-icon);
    }
  }

  &__play-container {
    .center-content();
    width: 90px;
    flex: none;
    background-color: var(--play-bg);
    position: relative;
    // Adjust radius to prevent bleeding of the underneath cover
    // when hover background is active.
    border-radius: (@_border-radius - 1px) 0 0 (@_border-radius - 1px);
    .fade-element(@_hover-transition-duration);

    &::after, &::before {
      content: '';
      width: @_border-radius;
      height: $width;
      position: absolute;
      background-color: inherit;
      left: 100%;
    }

    &::before {
      top: 0;
      // Extend to the top and left by 1px to prevent gap on some zoom levels.
      // Sizing is based on @_border-radius.
      clip-path: path('M-1 -1 L-1 10 L0 10 A10 10 0 0 1 10 0 L10 -1 Z');
    }

    &::after {
      bottom: 0;
      // Extend to the bottom left by 1px to prevent gap on some zoom levels.
      // Sizing is based on @_border-radius.
      clip-path: path('M-1 11 L-1 0 L0 0 A10 10 0 0 0 10 10 L10 11 Z');
    }
  }

  &__stats-item {
    margin: 2px 5px;
    display: flex;
    align-items: center;
    flex: none;
  }

  &__stats-item-icon {
    margin-right: 4px;
    color: hsl(var(--hsl-c2));
  }
}
