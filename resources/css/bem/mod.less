// Copyright (c) ppy Pty Ltd <contact@ppy.sh>. Licensed under the GNU Affero General Public License v3.0.
// See the LICENCE file in the repository root for full licence text.

.mod {
  &__sizing-container {
    // the entire mod component is expected to scale to a given height.
    // there are two options for that: either specify every size here against a fixed "reference size" and then scale the entire component in post,
    // or bake a scale into every single size specification of every element of the component.
    // this is attempting to implement the first approach via `zoom`
    // (`scale` cannot be used because it does not affect the layout size of the element, leaving undesirable gaps)
    // however, if `zoom` is specified on the root element it breaks tooltips, therefore zoom is applied to a child div instead.
    zoom: calc(var(--mod-height, @mod-height-normal) / @mod-height);
    height: unit(@mod-height, px);
    display: flex;
    position: relative;
  }

  .mod-type(@name, @colour) {
    &--type-@{name} {
      --type-bg-colour: @colour;

      // cross-reference: https://github.com/ppy/osu/blob/321707590ab51333ce86a0b1198592705603cdb4/osu.Game/Rulesets/UI/ModIcon.cs#L257
      // using `srgb-linear` is intentional here to match https://github.com/ppy/osu-framework/blob/cfb0d7b4b673583f0cf56273e94352769aa5bc9a/osu.Framework/Utils/Interpolation.cs#L252-L258
      --type-fg-colour: color-mix(in srgb-linear, black, @colour 10%);

      // cross-reference: https://github.com/ppy/osu/blob/321707590ab51333ce86a0b1198592705603cdb4/osu.Game/Rulesets/UI/ModIcon.cs#L262
      // and https://github.com/ppy/osu-framework/blob/cfb0d7b4b673583f0cf56273e94352769aa5bc9a/osu.Framework/Graphics/Colour4.cs#L134-L138
      // `.Darken(2.8f)` amounts to dividing every colour component by 1 + 2.8 = 3.8
      // which is the same thing as interpolating between black and @colour at t = 1 / 3.8 â‰ˆ 0.2631578947
      // using `srgb` is intentional because the `.Darken()` helper does no colourspace conversion
      --type-extender-colour: color-mix(in srgb, black, @colour 26.3%);
    }
  }

  .mod-type(Automation, @osu-colour-blue-1);
  .mod-type(Conversion, @osu-colour-purple-1);
  .mod-type(DifficultyIncrease, @osu-colour-red-1);
  .mod-type(DifficultyReduction, @osu-colour-lime-1);
  .mod-type(Fun, @osu-colour-pink-1);
  .mod-type(System, @yellow);

  &__icon {
    position: relative;
    width: @mod-width;
    background-size: contain;
    background-position: center;
    background-repeat: no-repeat;

    &::before {
      .full-size();
      background-color: var(--type-bg-colour);
      mask-image: url("~@images/badges/mods/blanks/mod-icon.svg");
      mask-size: contain;
      mask-position: center;
      mask-repeat: no-repeat;
      content: "";
      display: flex;
    }

    &::after {
      .full-size();
      content: attr(data-acronym);
      display: flex;
      align-items: center;
      justify-content: center;
      color: var(--type-fg-colour);
      font-family: @font-grade;
      font-weight: 900;
      font-size: 22px;
      margin-top: 2px;
    }

    .mod-icon-osu(@acronym, @filename) {
      &--@{acronym}::after {
        content: "";
        background-color: var(--type-fg-colour);
        mask-image: url("~@images/badges/mods/@{filename}.svg");
        mask-position: center;
        mask-size: contain;
        mask-repeat: no-repeat;
        margin: 0;
      }
    }

    .mod-icon-fa(@acronym, @glyph) {
      &--@{acronym}::after {
        .fas();
        display: flex;
        content: @glyph;
        font-size: 45px;
        padding: 0 0 5px 2px; // helps a bit on small sizes
      }
    }

    .mod-icon-osu(AP, autopilot);
    .mod-icon-osu(AT, autoplay);
    .mod-icon-osu(CN, cinema);
    .mod-icon-osu(DT, double-time);
    .mod-icon-osu(EZ, easy);
    .mod-icon-osu(FL, flashlight);
    .mod-icon-osu(HT, half-time);
    .mod-icon-osu(HR, hard-rock);
    .mod-icon-osu(HD, hidden);
    .mod-icon-osu(NC, nightcore);
    .mod-icon-osu(NF, no-fail);
    .mod-icon-osu(PF, perfect);
    .mod-icon-osu(RD, random);
    .mod-icon-osu(RX, relax);
    .mod-icon-osu(SD, sudden-death);
    .mod-icon-osu(SO, spun-out);
    .mod-icon-osu(TD, touch-device);
    .mod-icon-osu(TP, target-practice);

    .mod-icon-fa(AD, @fa-var-circle);
    .mod-icon-fa(AL, @fa-var-keyboard);
    .mod-icon-fa(BL, @fa-var-adjust);
    .mod-icon-fa(CL, @fa-var-history);
    .mod-icon-fa(CS, @fa-var-equals);
    .mod-icon-fa(DA, @fa-var-hammer);
    .mod-icon-fa(DF, @fa-var-compress-arrows-alt);
    .mod-icon-fa(DP, @fa-var-cube);
    .mod-icon-fa(FF, @fa-var-cloud);
    .mod-icon-fa(GR, @fa-var-arrows-alt-v);
    .mod-icon-fa(HO, @fa-var-dot-circle);
    .mod-icon-fa(IN, @fa-var-yin-yang);
    .mod-icon-fa(NM, @fa-var-ban);
    .mod-icon-fa(NS, @fa-var-eye-slash);
    .mod-icon-fa(MG, @fa-var-magnet);
    .mod-icon-fa(MU, @fa-var-volume-mute);
    .mod-icon-fa(SI, @fa-var-undo);
    .mod-icon-fa(TR, @fa-var-arrows-alt);
    .mod-icon-fa(WD, @fa-var-chevron-circle-down);
    .mod-icon-fa(WG, @fa-var-certificate);
    .mod-icon-fa(WU, @fa-var-chevron-circle-up);
  }

  &__customised-indicator::after {
    width: @mod-indicator-size;
    height: @mod-indicator-size;
    border-radius: 50%;
    background-color: var(--type-fg-colour);
    z-index: 1;
    position: absolute;
    left: 60px;
    top: -7px;
    .fas();
    // in client this is 0.6, but that looks bad on small sizes
    font-size: 8px;
    .center-content();
    content: @fa-var-cog;
    color: var(--type-bg-colour);
  }

  &__extender {
    width: @mod-extender-width;
    background-color: var(--type-extender-colour);
    mask-image: url("~@images/badges/mods/blanks/mod-icon-extender.svg");
    mask-size: contain;
    mask-position: center;
    mask-repeat: no-repeat;
    filter: drop-shadow(0px 1px 1px rgba(0, 0, 0, 0.3));
    margin-left: -@mod-extender-width-inset;
    padding-left: @mod-extender-width-inset;
    padding-right: 5px;
    padding-bottom: 3px;
    font-weight: 700;
    font-size: 28px;
    display: flex;
    align-items: center;
    justify-content: center;
    color: var(--type-bg-colour);
  }
}
